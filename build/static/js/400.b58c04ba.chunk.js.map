{"version":3,"file":"static/js/400.b58c04ba.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) {\n        ;\n      }\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","push","value","err","unsupportedIterableToArray","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","String","Number","_typeof","obj","constructor","_unsupportedIterableToArray","o","minLen","n","toString","slice","name","from","test","_defineProperty","toPropertyKey","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","hasOwnProperty","isVariantLabel","v","isAnimationControls","start","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","_setPrototypeOf","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","e","result","Super","NewTarget","this","VisualElementHandler","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","buildTransform","transformIsDefault","transformTemplate","transform","transformKeys","enableHardwareAcceleration","allowTransformNone","transformString","sort","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","_e2","trim","isCSSVariable","getValueAsType","type","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","onPointerCancel","startPress","latestProps","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","arrayLikeToArray","iter","shallowCompare","prev","prevLength","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","initialGuess","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","property","_get","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","createDomMotionConfig"],"sourceRoot":""}